{
  "price": {
    "enabled": true,
    "name": "Price",
    "script": "plotcandlestick(options.useHeikinAshi ? avg_heikinashi(bar) : options.useGaps ? avg_ohlc_with_gaps(bar) : avg_ohlc(bar))",
    "options": {
      "priceScaleId": "right",
      "priceFormat": {
        "auto": true,
        "precision": 1
      },
      "priceLineVisible": true,
      "lastValueVisible": true,
      "borderVisible": true,
      "upColor": "rgb(59,202,109)",
      "downColor": "rgb(214,40,40)",
      "borderUpColor": "rgb(65,240,123)",
      "borderDownColor": "rgb(239,67,82)",
      "wickUpColor": "rgb(223,211,144)",
      "wickDownColor": "rgb(239,67,82)",
      "useGaps": false,
      "useHeikinAshi": false
    }
  },
  "smas": {
    "name": "SMA {fastLength} {mediumLength} {slowLength}",
    "displayName": "SMA 50 100 200",
    "script": "plotline(sma($price.close, options.fastLength), color=options.fastColor)\nplotline(sma($price.close, options.mediumLength), color=options.mediumColor)\nplotline(sma($price.close, options.slowLength), color=options.slowColor)",
    "options": {
      "priceScaleId": "right",
      "fastLength": 50,
      "mediumLength": 100,
      "slowLength": 200,
      "fastColor": "#42a5f5",
      "mediumColor": "#64b5f6",
      "slowColor": "#90caf9"
    }
  },
  "emas": {
    "name": "EMA {fastLength} {mediumLength} {slowLength}",
    "displayName": "EMA 50 100 200",
    "script": "plotline(ema($price.close, options.fastLength), color=options.fastColor)\nplotline(ema($price.close, options.mediumLength), color=options.mediumColor)\nplotline(ema($price.close, options.slowLength), color=options.slowColor)",
    "options": {
      "priceScaleId": "right",
      "fastLength": 50,
      "mediumLength": 100,
      "slowLength": 200,
      "fastColor": "#42a5f5",
      "mediumColor": "#64b5f6",
      "slowColor": "#90caf9"
    }
  },
  "volume": {
    "enabled": true,
    "name": "Volume",
    "description": "Volume + delta",
    "script": "if (upColor === 0) {\n  if (options.showDelta) {\n    upColor = options.upBgColor\n    downColor = options.downBgColor\n  } else {\n    upColor = options.upColor\n    downColor = options.downColor\n  }\n}\n\nif (options.showDelta) {\n  plothistogram({ time: time, value: Math.abs(vbuy-vsell), color: vbuy - vsell > 0 ? options.upColor : options.downColor})\n}\n\nplothistogram({ time: time, value: vbuy + vsell, color: vbuy > vsell ? upColor : downColor })",
    "options": {
      "priceFormat": {
        "type": "volume"
      },
      "upColor": "rgb(59,202,109)",
      "downColor": "rgb(235,30,47)",
      "priceScaleId": "volume",
      "scaleMargins": {
        "top": 0.84,
        "bottom": 0
      },
      "showDelta": true,
      "upBgColor": "rgba(59,202,109,0.5)",
      "downBgColor": "rgba(235,30,47,0.5)"
    }
  },
  "liquidations": {
    "enabled": true,
    "name": "Liquidations",
    "description": "Liquidations by side",
    "script": "plothistogram(lbuy, color=options.upColor)\nplothistogram(-lsell, color=options.downColor)",
    "options": {
      "priceFormat": {
        "type": "volume"
      },
      "priceScaleId": "volume_liquidations",
      "upColor": "rgb(255,76,243)",
      "downColor": "rgb(255,183,77)",
      "scaleMargins": {
        "top": 0.75,
        "bottom": 0.17
      }
    }
  },
  "cvd": {
    "enabled": true,
    "name": "CVD",
    "description": "Cumulative Volume Delta",
    "script": "plotline(cum(vbuy - vsell))",
    "options": {
      "priceScaleId": "cvd",
      "priceFormat": {
        "type": "volume"
      },
      "color": "#3BCA6D",
      "scaleMargins": {
        "top": 0.84,
        "bottom": 0.00
      }
    }
  },
  "btccvdperp": {
    "name": "CVD (BTC PERP)",
    "description": "CVD specific markets",
    "script": "line(cum((BINANCE_FUTURES:btcusdt.vbuy+BINANCE_FUTURES:btcusd_perp.vbuy+BITFINEX:BTCF0:USTF0.vbuy+BITMEX:XBTUSD.vbuy+BYBIT:BTCUSD.vbuy+BYBIT:BTCUSDT.vbuy+DERIBIT:BTC-PERPETUAL.vbuy+FTX:BTC-PERP.vbuy+HUOBI:BTC-USD.vbuy+KRAKEN:PI_XBTUSD.vbuy+OKEX:BTC-USDT-SWAP.vbuy+OKEX:BTC-USD-SWAP.vbuy)- (BINANCE_FUTURES:btcusdt.vsell+BINANCE_FUTURES:btcusd_perp.vsell+BITFINEX:BTCF0:USTF0.vsell+BITMEX:XBTUSD.vsell+BYBIT:BTCUSD.vsell+BYBIT:BTCUSDT.vsell+DERIBIT:BTC-PERPETUAL.vsell+FTX:BTC-PERP.vsell+HUOBI:BTC-USD.vsell+KRAKEN:PI_XBTUSD.vsell+OKEX:BTC-USDT-SWAP.vsell+OKEX:BTC-USD-SWAP.vsell)), title=CVD:BTC:PERP)",
    "options": {
      "priceFormat": {
        "type": "volume"
      },
      "priceScaleId": "cvdperp",
      "color": "#42a5f5"
    }
  },
  "btccvdspot": {
    "name": "CVD (BTC SPOT)",
    "description": "CVD specific markets",
    "script": "line(cum((BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+BITFINEX:BTCUSD.vbuy+BITSTAMP:btcusd.vbuy+BITSTAMP:btcusdt.vbuy+BITSTAMP:btcusdc.vbuy+COINBASE:BTC-USDC.vbuy+COINBASE:BTC-USD.vbuy+COINBASE:BTC-USDT.vbuy+FTX:BTC/USD.vbuy+FTX:BTC/USDT.vbuy+HUOBI:btcusdt.vbuy+HUOBI:btcusdc.vbuy+KRAKEN:XBT/USDC.vbuy+KRAKEN:XBT/USDT.vbuy+KRAKEN:XBT/USD.vbuy+OKEX:BTC-USDT.vbuy+OKEX:BTC-USDC.vbuy+POLONIEX:USDT_BTC.vbuy+POLONIEX:USDC_BTC.vbuy)-(BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+BITFINEX:BTCUSD.vsell+BITSTAMP:btcusd.vsell+BITSTAMP:btcusdt.vsell+BITSTAMP:btcusdc.vsell+COINBASE:BTC-USDC.vsell+COINBASE:BTC-USD.vsell+COINBASE:BTC-USDT.vsell+FTX:BTC/USD.vsell+FTX:BTC/USDT.vsell+HUOBI:btcusdt.vsell+HUOBI:btcusdc.vsell+KRAKEN:XBT/USDC.vsell+KRAKEN:XBT/USDT.vsell+KRAKEN:XBT/USD.vsell+OKEX:BTC-USDT.vsell+OKEX:BTC-USDC.vsell+POLONIEX:USDT_BTC.vsell+POLONIEX:USDC_BTC.vsell)), title=CVD:BTC:SPOT)",
    "options": {
      "priceFormat": {
        "type": "volume"
      },
      "priceScaleId": "cvdspot",
      "color": "#4caf50"
    }
  },
  "ctd": {
    "script": "plotline(cum(cbuy-csell))",
    "name": "CTD",
    "description": "Cumulative Trades Delta",
    "options": {
      "priceScaleId": "ctd",
      "lineStyle": 4,
      "lineWidth": 1
    }
  },
  "cld": {
    "script": "plotline(cum(lbuy-lsell))",
    "name": "CLD",
    "description": "Cumulative Liquidations Delta",
    "options": {
      "priceFormat": {
        "type": "volume"
      },
      "color": "rgb(156,39,176)",
      "priceScaleId": "ctd",
      "lineWidth": 1,
      "scaleMargins": {
        "top": 0.75,
        "bottom": 0.17
      }
    }
  },
  "allmarkets": {
    "script": "plotline(BITFINEX:BTCUSD.close, color=#97c554, title=Bitfinex.spot)\nplotline(BINANCE:btcusdt.close, color=#f3ba2f, title=Binance.spot)\nplotline(OKEX:BTC-USDT.close, color=#5894f2, title=Okex.spot)\nplotline(KRAKEN:XBT/USD.close, color=#5841d8, title=Kraken.spot)\nplotline(COINBASE:BTC-USD.close, color=#0e70e2, title=Coinbase.spot)\nplotline(POLONIEX:USDT_BTC.close, color=#858b8f, title=Poloniex.spot)\nplotline(HUOBI:btcusdt.close, color=#2ca6e0, title=Huobi.spot)\nplotline(BITSTAMP:btcusd.close, color=#169f4a, title=Bitstamp.spot)\nplotline(BITMEX:XBTUSD.close, color=#595fb5, title=Bitmex.perp)\nplotline(BITFINEX:BTCF0:USTF0.close, color=#97c554, title=Bitfinex.perp)\nplotline(OKEX:BTC-USD-SWAP.close, color=#5894f2, title=Okex.perp)\nplotline(BINANCE_FUTURES:btcusdt.close, color=#f3ba2f, title=Binance.perp)\nplotline(BINANCE_FUTURES:btcusd_perp.close, color=#f3ba2f, title=Binance.perp)\nplotline(HUOBI:BTC-USD.close, color=#2ca6e0, title=Huobi.perp)\nplotline(KRAKEN:PI_XBTUSD.close, color=#5841d8, title=Kraken.perp)\nplotline(DERIBIT:BTC-PERPETUAL.close, color=#2dae9a, title=Deribit.perp)\nplotline(FTX:BTC-PERP.close, color=#02a6c2, title=Ftx.perp)\nplotline(BYBIT:BTCUSD.close, color=#f9b600, title=Bybit.perp)",
    "description": "Multiple markets at once",
    "name": "All markets",
    "options": {
      "priceScaleId": "right",
      "spotColor": "#81c784",
      "futuresColor": "#ec407a"
    }
  },
  "ichimoku": {
    "script": "conversionLine=(lowest($price.low, options.conversionLineLength) + highest($price.high, options.conversionLineLength)) / 2\nbaseLine=(lowest($price.low, options.baseLineLength) + highest($price.high, options.baseLineLength)) / 2\nleadLineOne=(conversionLine + baseLine) / 2\nleadLineTwo=(lowest($price.low, options.laggingSpanTwoLength) + highest($price.high, options.laggingSpanTwoLength)) / 2\nplotcloudarea(leadLineTwo, leadLineOne, offset=options.displacement)",
    "name": "Ichimoku",
    "options": {
      "baseLineLength": 26,
      "conversionLineLength": 9,
      "displacement": 24,
      "laggingSpanTwoLength": 52,
      "priceScaleId": "right"
    }
  },
  "bollinger_bands": {
    "script": "a = sma(Math.pow($price.close,2),options.length)\nb = Math.pow(sum($price.close,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nsrc = $price.close\n\nbasis = sma($price.close, options.length)\ndev = options.mult * stdev\nupper = basis + dev\nlower = basis - dev\n\nplotline(basis, color=options.basisColor)\nplotcloudarea(lower, upper)",
    "name": "Bollinger Bands",
    "options": {
      "priceScaleId": "right",
      "mult": 2,
      "length": 20,
      "lineStyle": 2,
      "basisColor": "rgba(129,199,132,0.5)",
      "positiveColor": "rgba(0,0,0,0.1)",
      "negativeColor": "rgba(0,0,0,0.1)",
      "lowerLineColor": "rgb(129,199,132)",
      "higherLineColor": "rgb(129,199,132)"
    }
  },
  "bb-ema-ribbon": {
    "script": "src = sma($price.close, options.maLength)\na = sma(Math.pow(src,2),options.bbLength)\nb = Math.pow(sum(src,options.bbLength),2)/Math.pow(options.bbLength,2)\nstdev = Math.sqrt(a - b)\ndev = options.mult * stdev\nbasis = sma(src, options.bbLength)\nupper = basis + dev\nlower = basis - dev\nsrcTwo=($price.close + $price.low + $price.high) / 3\nemaSlow = ema(srcTwo, options.emaSlowLength)\nemaFast = ema(srcTwo, options.emaFastLength)\nplotcloudarea(lower, upper, positiveColor=options.slowRibbonColor, negativeColor=options.slowRibbonColor)\nplotcloudarea(emaSlow, emaFast)",
    "name": "Ribbon",
    "options": {
      "priceScaleId": "right",
      "maLength": 200,
      "bbLength": 50,
      "mult": 3,
      "emaSlowLength": 50,
      "emaFastLength": 20,
      "slowRibbonColor": "rgba(255,204,128,0.1)",
      "higherLineColor": "rgba(0,0,0,0)",
      "lowerLineColor": "rgba(0,0,0,0)",
      "negativeColor": "rgba(255,167,38,0.25)",
      "positiveColor": "rgba(255,167,38,0.25)"
    }
  },
  "vwap": {
    "script": "var src = ($price.high + $price.low + $price.close)/3\nvar vol=vbuy+vsell\nvar sumVol = cum(vol)\nvar sumSrcVol = cum(src * vol)\nvar sumSrcSrcVol = cum(vol*Math.pow(src, 2))\nvar VWAP = sumSrcVol / sumVol \nvar variance = sumSrcSrcVol / sumVol - Math.pow(VWAP, 2)\nvar stDev = Math.sqrt(variance < 0 ? 0 : variance)\n\t\nline(VWAP)\ncloudarea(VWAP - stDev * options.stdevMultiplier, VWAP + stDev * options.stdevMultiplier)\n\nvar unixDays = time / 60 / 60 / 24 + 3\nif (unixDays % (options.sessionLengthInDays) === 0) {\n  fns[0].state = {}\n  fns[1].state = {}\n  fns[2].state = {}\n}",
    "name": "VWAP",
    "options": {
      "priceScaleId": "right",
      "stdevMultiplier": 1,
      "color": "rgb(41,98,255)",
      "sessionLengthInDays": 7
    }
  },
  "rsi": {
    "script": "// rsi\nsrc(50) = $price.close\nvar change = src - src[1]\nvar up = ema(Math.max(change, 0), options.length)\nvar down = ema(-Math.min(change, 0), options.length)\nrsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))\nline(rsi)\nbrokenarea(options.thresholdUp, options.thresholdLow, color=options.thresholdColor)\n\nif (options.showDivs) {\n  // <markers utils>\n  if (markers === 0) {\n    markers = []\n  }\n  \n  if (pendingMarker && pendingMarker.time < time) {\n    markers.push(pendingMarker)\n    pendingMarker = null\n  }\n  \n  var newMarker = null\n  // </markers utils>\n  \n  // find long signals\n  pl = pivot_low(rsi, options.pivotLeftLength, options.pivotRightLength)\n  if (pl && pl !== _pl) {\n    var plsrc = src[options.pivotRightLength]\n    if (pl > _pl && plsrc < _plsrc && (pl < options.thresholdLow || _pl < options.thresholdLow)) {\n      newMarker = {\n        time: time - options.pivotRightLength * bar.timeframe,\n        position: 'belowBar',\n        text: '🔺',\n        size: 1\n      }\n    }\n    \n    _plsrc = plsrc\n    _pl = pl\n  }\n  \n  // find sell signals\n  ph = pivot_high(rsi, options.pivotLeftLength, options.pivotRightLength)\n  \n  if (ph && ph !== _ph) {\n    var phsrc = src[options.pivotRightLength]\n    if (ph < _ph && phsrc > _phsrc && (ph > options.thresholdUp || _ph > options.thresholdUp)) {\n      newMarker = {\n        time: time - options.pivotRightLength * bar.timeframe,\n        position: 'aboveBar',\n        text: '🔻',\n        size: 1\n      }\n    }\n    \n    _phsrc = phsrc\n    _ph = ph\n  }\n  \n  // <markers utils>\n  if (newMarker || (pendingMarker && !newMarker)) {\n    pendingMarker = newMarker\n    \n    if (markers.length > 200) {\n      markers.splice(0, 1)\n    }\n    \n    if (series[0].setMarkers) {\n      series[0].setMarkers(markers.concat(pendingMarker))\n    }\n  }\n  // </markers utils>\n}",
    "name": "RSI",
    "options": {
      "priceScaleId": "rsi",
      "scaleMargins": {
        "top": 0.01,
        "bottom": 0.83
      },
      "thresholdColor": "rgba(102,187,106,0.1)",
      "color": "rgb(165,214,167)",
      "length": 14,
      "pivotLeftLength": 3,
      "pivotRightLength": 3,
      "thresholdLow": 20,
      "thresholdUp": 70,
      "showDivs": false
    }
  },
  "pivot-vwap": {
    "script": "ph = pivot_high($price.high, options.pivotLeftLength, options.pivotRightLength)\npl = pivot_low($price.low, options.pivotLeftLength, options.pivotRightLength)\n\nsrcClose(100) = $price.close\nsrcLow(100) = $price.low\nsrcHigh(100) = $price.high\nvol(100) = vbuy + vsell\n\nif (ph && _ph !== ph) {  \n  if (ph > _ph && ((!options.showBands && ph > vwapHighHigh) || (options.showBands && ph > highestBand))) {\n    var _vol = 0\n    var _srcVolClose  = 0\n    var _srcSrcVolClose  = 0\n    var _srcVolHigh  = 0\n    var _srcSrcVolHigh  = 0\n    var _srcVolLow  = 0\n    var _srcSrcVolLow  = 0\n    \n    for (var i = options.pivotRightLength; i > 0; i--) {\n      var srcAtIndex = srcClose[i]\n      var volAtIndex = vol[i]\n      _vol = _vol + volAtIndex \n      _srcVolClose = _srcVolClose + srcAtIndex * volAtIndex\n      _srcSrcVolClose = _srcSrcVolClose + volAtIndex * Math.pow(srcAtIndex, 2)\n  \n      srcAtIndex = srcHigh[i]\n      _srcVolHigh = _srcVolHigh + srcAtIndex * volAtIndex\n      _srcSrcVolHigh = _srcSrcVolHigh + volAtIndex * Math.pow(srcAtIndex, 2)\n  \n      srcAtIndex = srcLow[i]\n      _srcVolLow = _srcVolLow + srcAtIndex * volAtIndex\n      _srcSrcVolLow = _srcSrcVolLow + volAtIndex * Math.pow(srcAtIndex, 2)\n    }\n    \n    fns[2].state.open = _vol \n    fns[3].state.open = _srcVolClose\n    fns[4].state.open = _srcVolHigh\n    fns[5].state.open = _srcVolLow\n    fns[6].state.open = _srcSrcVolClose\n    fns[7].state.open = _srcSrcVolHigh\n    fns[8].state.open = _srcSrcVolLow\n  }\n  \n  _ph = ph\n}\n\nvar volHigh = cum(vol)\nvar srcVolHighClose = cum(srcClose * vol)\nvar srcVolHighHigh = cum(srcHigh * vol)\nvar srcVolHighLow = cum(srcLow * vol)\nvwapHighClose = srcVolHighClose / volHigh \nvwapHighHigh = srcVolHighHigh / volHigh \nvwapHighLow = srcVolHighLow / volHigh \n\nif (options.showBands) {\n  var srcSrcVolHighClose = cum(vol * Math.pow(srcClose, 2))\n  var srcSrcVolHighHigh = cum(vol * Math.pow(srcHigh, 2))\n  var srcSrcVolHighLow = cum(vol * Math.pow(srcLow, 2))\n  var stDevHighClose = Math.sqrt(srcSrcVolHighClose / volHigh - Math.pow(vwapHighClose, 2))\n  var stDevHighHigh = Math.sqrt(srcSrcVolHighHigh / volHigh - Math.pow(vwapHighHigh, 2))\n  var stDevHighLow = Math.sqrt(srcSrcVolHighLow / volHigh - Math.pow(vwapHighLow, 2))\n  highestBand = vwapHighClose + stDevHighClose * options.bandMultiplier\n\n  cloudarea(vwapHighLow + stDevHighLow * options.bandMultiplier, vwapHighHigh + stDevHighHigh * options.bandMultiplier)\n}\n\nif (pl && _pl !== pl) {\n  if (pl < _pl && ((!options.showBands && pl < vwapLowLow) || (options.showBands && pl < lowestBand))) {\n    var _vol = 0\n    var _srcVolClose  = 0\n    var _srcSrcVolClose  = 0\n    var _srcVolHigh  = 0\n    var _srcSrcVolHigh  = 0\n    var _srcVolLow  = 0\n    var _srcSrcVolLow  = 0\n    \n    for (var i = options.pivotRightLength; i > 0; i--) {\n      var srcAtIndex = srcClose[i]\n      var volAtIndex = vol[i]\n      _vol = _vol + volAtIndex \n      _srcVolClose = _srcVolClose + srcAtIndex * volAtIndex\n      _srcSrcVolClose = _srcSrcVolClose + volAtIndex * Math.pow(srcAtIndex, 2)\n\n      srcAtIndex = srcHigh[i]\n      _srcVolHigh = _srcVolHigh + srcAtIndex * volAtIndex\n      _srcSrcVolHigh = _srcSrcVolHigh + volAtIndex * Math.pow(srcAtIndex, 2)\n\n      srcAtIndex = srcLow[i]\n      _srcVolLow = _srcVolLow + srcAtIndex * volAtIndex\n      _srcSrcVolLow = _srcSrcVolLow + volAtIndex * Math.pow(srcAtIndex, 2)\n    }\n    \n    fns[9].state.open = _vol \n    fns[10].state.open = _srcVolClose\n    fns[11].state.open = _srcVolHigh\n    fns[12].state.open = _srcVolLow\n    fns[13].state.open = _srcSrcVolClose\n    fns[14].state.open = _srcSrcVolHigh\n    fns[15].state.open = _srcSrcVolLow\n  }\n\n  _pl = pl\n}\n\nvar volLow = cum(vol)\nvar srcVolLowClose = cum(srcClose * vol)\nvar srcVolLowHigh = cum(srcHigh * vol)\nvar srcVolLowLow = cum(srcLow * vol)\nvwapLowClose = srcVolLowClose / volLow \nvwapLowHigh = srcVolLowHigh / volLow \nvwapLowLow = srcVolLowLow / volLow \n\nif (options.showBands) {\n  var srcSrcVolLowClose = cum(vol * Math.pow(srcClose, 2))\n  var srcSrcVolLowHigh = cum(vol * Math.pow(srcHigh, 2))\n  var srcSrcVolLowLow = cum(vol * Math.pow(srcLow, 2))\n  var stDevLowClose = Math.sqrt(srcSrcVolLowClose / volLow - Math.pow(vwapLowClose, 2))\n  var stDevLowHigh = Math.sqrt(srcSrcVolLowHigh / volLow - Math.pow(vwapLowHigh, 2))\n  var stDevLowLow = Math.sqrt(srcSrcVolLowLow / volLow - Math.pow(vwapLowLow, 2))\n  lowestBand = vwapLowClose - stDevLowClose * options.bandMultiplier\n  \n  cloudarea(vwapLowLow - stDevLowLow * options.bandMultiplier, vwapLowHigh - stDevLowHigh * options.bandMultiplier)\n}\n\nif (options.showMedianVwap) {\n  line((vwapLowClose + vwapLowHigh + vwapLowLow + vwapHighClose + vwapHighHigh + vwapHighLow) / 6)\n}\n\nif (options.showPivot) {\n  if (_ph) line(_ph, offset=(-options.pivotRightLength-options.pivotRightLength)/2)\n  if (_pl) line(_pl, offset=(-options.pivotRightLength-options.pivotRightLength)/2)\n}",
    "name": "Pivot VWAP {pivotLeftLength} {pivotRightLength}",
    "version": "3.1.0",
    "options": {
      "priceScaleId": "right",
      "pivotLeftLength": 14,
      "pivotRightLength": 14,
      "showPivot": false,
      "showMedianVwap": false,
      "bandMultiplier": 1.5,
      "showBands": true,
      "color": "rgb(255,255,255)",
      "lowerLineColor": "rgba(255,255,255,0.55)",
      "higherLineColor": "rgba(255,255,255,0.55)",
      "negativeColor": "rgba(255,255,255,0.2)",
      "positiveColor": "rgba(255,255,255,0.2)"
    }
  },
  "sma-bands": {
    "name": "SMA VWAP Bands {length}",
    "version": "3.1.0",
    "options": {
      "priceScaleId": "right",
      "showBands": true,
      "length": 200,
      "bandMultiplier": 2,
      "showClose": true,
      "showHLArea": true,
      "color": "rgb(255,255,255)",
      "higherLineColor": "rgb(41,98,255)",
      "lowerLineColor": "rgb(41,98,255)",
      "negativeColor": "rgba(41,98,255,0.2)",
      "positiveColor": "rgba(41,98,255,0.2)"
    },
    "script": "var vol = vbuy + vsell\nvar length = options.length || 200\n\nvar volSma = sma(vol, options.length)\nvar srcVolSmaClose = sma($price.close * vol, options.length)\nvar srcVolSmaHigh = sma($price.high * vol, options.length)\nvar srcVolSmaLow = sma($price.low * vol, options.length)\nvwapHighClose = srcVolSmaClose / volSma \nvwapHighHigh = srcVolSmaHigh / volSma \nvwapHighLow = srcVolSmaLow / volSma \n\nif (options.showHLArea) {\n  cloudarea(vwapHighHigh, vwapHighLow)\n}\n\nif (options.showClose) {\n  line(vwapHighClose)\n}\n\nif (options.showBands) {\n  var srcSrcVolSmaClose = sma(vol * Math.pow($price.close, 2), options.length)\n  var srcSrcVolSmaHigh = sma(vol * Math.pow($price.high, 2), options.length)\n  var srcSrcVolSmaLow = sma(vol * Math.pow($price.low, 2), options.length)\n  var stDevHighClose = Math.sqrt(srcSrcVolSmaClose / volSma - Math.pow(vwapHighClose, 2))\n  var stDevHighHigh = Math.sqrt(srcSrcVolSmaHigh / volSma - Math.pow(vwapHighHigh, 2))\n  var stDevHighLow = Math.sqrt(srcSrcVolSmaLow / volSma - Math.pow(vwapHighLow, 2))\n\n  if (options.showHLArea) {\n    cloudarea(vwapHighLow - stDevHighLow * options.bandMultiplier, vwapHighHigh - stDevHighHigh * options.bandMultiplier)\n    cloudarea(vwapHighLow + stDevHighLow * options.bandMultiplier, vwapHighHigh + stDevHighHigh * options.bandMultiplier)\n  }\n\n  if (options.showClose) {\n    line(vwapHighClose - stDevHighClose * options.bandMultiplier)\n    line(vwapHighClose + stDevHighClose * options.bandMultiplier)\n  }\n}"
  },
  "vwap-bands": {
    "name": "VWAP Bands {length}",
    "version": "3.1.0",
    "options": {
      "priceScaleId": "right",
      "stdevMultiplier": 1.5,
      "stdevSecondaryMultiplier": 2,
      "buyBgColor": "rgba(255,255,255,0.15)",
      "buyColor": "rgba(255,255,255,0.47)",
      "sellBgColor": "rgba(255,255,255,0.15)",
      "sellColor": "rgba(255,255,255,0.55)",
      "dblBuyBgColor": "rgba(255,255,255,0.15)",
      "dblBuyColor": "rgba(255,255,255,0.5)",
      "dblSellBgColor": "rgba(255,255,255,0.15)",
      "dblSellColor": "rgba(255,255,255,0.53)",
      "length": 100,
      "showDouble": true
    },
    "script": "var price = $price\nvar src = (price.high + price.low + price.close)/3\n\nvar sumSell = sum(vsell, options.length)\nvar sumSrcSell = sum(src * vsell, options.length)\nvar sumSrcSrcSell = sum(vsell*Math.pow(src, 2), options.length)\nvar VWAPSell = sumSrcSell / sumSell \nvar varianceSell = sumSrcSrcSell / sumSell - Math.pow(VWAPSell, 2)\nvar stDevSell = Math.sqrt(varianceSell < 0 ? 0 : varianceSell)\nvar sumBuy = sum(vbuy, options.length)\nvar sumSrcBuy = sum(src * vbuy, options.length)\nvar sumSrcSrcBuy = sum(vbuy*Math.pow(src, 2), options.length)\nvar VWAPBuy = sumSrcBuy / sumBuy \nvar varianceBuy = sumSrcSrcBuy / sumBuy - Math.pow(VWAPBuy, 2)\nvar stDevBuy = Math.sqrt(varianceBuy < 0 ? 0 : varianceBuy)\n\nvar thresholdDown = VWAPBuy - stDevBuy * options.stdevMultiplier\nvar thresholdUp = VWAPSell + stDevSell * options.stdevMultiplier\n\ncloudarea(\n  VWAPSell - stDevSell * options.stdevMultiplier,\n  thresholdDown,\n  positiveColor=options.buyBgColor,\n  negativeColor=options.buyBgColor,\n  higherLineColor=options.buyColor,\n  lowerLineColor=options.buyColor)\n\ncloudarea(thresholdUp,\n  VWAPBuy + stDevBuy * options.stdevMultiplier,\n  positiveColor=options.sellBgColor,\n  negativeColor=options.sellBgColor,\n  higherLineColor=options.sellColor,\n  lowerLineColor=options.sellColor)\n\nvar na = { time: time }\n\nif (options.showDouble) {\n  cloudarea(\n    VWAPSell - stDevSell * options.stdevSecondaryMultiplier,\n    thresholdDown,\n    positiveColor=options.dblBuyBgColor,\n    negativeColor=options.dblBuyBgColor,\n    higherLineColor=options.dblBuyColor,\n    lowerLineColor=options.dblBuyColor\n  )\n  \n  cloudarea(\n   thresholdUp,\n   VWAPBuy + stDevBuy * options.stdevSecondaryMultiplier,\n    positiveColor=options.dblSellBgColor,\n    negativeColor=options.dblSellBgColor,\n    higherLineColor=options.dblSellColor,\n    lowerLineColor=options.dblSellColor\n  )\n}"
  }
}
