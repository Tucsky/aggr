var o=Object.defineProperty,t=(t,n,i)=>(((t,n,i)=>{n in t?o(t,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[n]=i})(t,"symbol"!=typeof n?n+"":n,i),i);import{C as n,t as i,V as e,n as r}from"./index.5c4cb14.js";import{I as s}from"./indicatorOptionMixin.5c4cb14.js";var a=Object.defineProperty,l=Object.getOwnPropertyDescriptor;let p=class extends e{constructor(){super(...arguments),t(this,"definition")}get options(){return this.definition.options?Array.isArray(this.definition.options)?this.definition.options.reduce(((o,t)=>(o[t]=t||"Choose",o)),{}):this.definition.options:[]}};p=((o,t,n,i)=>{for(var e,r=i>1?void 0:i?l(t,n):t,s=o.length-1;s>=0;s--)(e=o[s])&&(r=(i?e(t,n,r):e(r))||r);return i&&r&&a(t,n,r),r})([n({name:"IndicatorOptionDropdown",mixins:[s],components:{DropdownButton:i}})],p);const c=r(p,(function(){var o=this,t=o._self._c;return o._self._setupProxy,t("label",{staticClass:"indicator-option-dropdown form-group"},[t("label",[o._v(o._s(o.label)),o._t("description")],2),t("dropdown-button",{staticClass:"-outline form-control -arrow",attrs:{value:o.value,options:o.options,placeholder:o.definition.placeholder},on:{input:function(t){return o.$emit("input",t)}}})],1)}),[],!1,null,null,null,null).exports;export{c as default};
