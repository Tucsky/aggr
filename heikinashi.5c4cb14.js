const e="```ts\r\nheikinashi(renderer: Renderer, time: number, ohlc: {\r\n    open: number,\r\n    high: number,\r\n    low: number,\r\n    close: number\r\n}): {\r\n    time: number,\r\n    open: number,\r\n    high: number,\r\n    low: number,\r\n    close: number\r\n}\r\n```\r\n\r\nComputes the Heikin-Ashi values based on the provided OHLC (Open, High, Low, Close) data. Heikin-Ashi is a charting technique that averages price data to create a Japanese candlestick chart that filters out market noise.\r\n\r\n## Parameters\r\n\r\n- `renderer`: The renderer object, which is automatically injected with the local timestamp.\r\n- `time`: The timestamp for the current candle/bar.\r\n- `ohlc`: An object containing the open, high, low, and close values of the current candle/bar.\r\n\r\n## Returns\r\n\r\nAn object containing the calculated Heikin-Ashi values:\r\n- `time`: The timestamp for the current candle/bar.\r\n- `open`: The average of the previous Heikin-Ashi candle's open and close (or the current OHLC open and close if it's the first calculation).\r\n- `high`: The maximum value among the current open, high, and close.\r\n- `low`: The minimum value among the current open, low, and close.\r\n- `close`: The average of the current open, high, low, and close.\r\n\r\n## Summary\r\n\r\nThe `heikinashi` function simplifies price data and helps traders identify trending periods and potential reversal points. The initial state is null, which gets updated with the high and low from the provided `ohlc`. The `close` is then computed as the average of the open, high, low, and previous close. For subsequent calculations, the `open` is averaged with the previous Heikin-Ashi candle's `open` and `close`. The resulting `low` and `high` are adjusted to represent the extremes of the current Heikin-Ashi candle.\r\n\r\n*Note: This function is often used in financial analysis to provide a smoother chart that makes it easier to identify trends and reversals compared to traditional candlestick charts.*\r\n";export{e as default};
