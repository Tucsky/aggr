const n='```ts\r\nMyNumber = option(\r\n  default=123, // default value\r\n  label="Number value", // text above input\r\n  placeholder="Type something" // text within empty input\r\n)\r\nconsole.log(MyNumber) // 123\r\n```\r\n\r\nDefining options with the new option() function will allow choose the appropriate input type, set default value, help text and more.\r\n\r\n## Allowed options types\r\n```ts\r\nexport enum ALLOWED_OPTION_TYPES {\r\n  text,\r\n  number,\r\n  range,\r\n  list,\r\n  lineType,\r\n  lineStyle,\r\n  color,\r\n  checkbox,\r\n  exchange\r\n}\r\n```\r\n\r\n## Basic example\r\n\r\n![basics](https://i.imgur.com/LHi36wv.png)\r\n\r\n```ts\r\n// number input with `min`, `max` and `step` attribute\r\nthreshold = option(type = number, min = 0, max = 10, step = 0.1)\r\n```\r\n\r\n```ts\r\n// default type is number\r\nMyNumber = option(\r\n  default=123, // default value\r\n  label="Number value", // text above input\r\n  placeholder="Type something" // text within empty input \r\n)\r\nconsole.log(MyNumber) // 123\r\n\r\n// text input\r\nMyText = option(\r\n  type=text,\r\n  label="Text value",\r\n  placeholder="Fill me",\r\n  description="Small description to help understand the option"\r\n)\r\nconsole.log(MyText) // ""\r\n```\r\n\r\n## Range input\r\n\r\n![ranges](https://i.imgur.com/79A2KYI.png)\r\n\r\n```ts\r\nsmallrange = option(\r\ntype = range,\r\nlabel = \'Small range\',\r\nmin = 0,\r\nmax = 1\r\n)\r\n\r\nbigrange = option(\r\ntype = range,\r\nlabel = \'Big range\',\r\ngradient = [\'red\', \'limegreen\'], // colorize slider\r\nmin = 0,\r\nmax = 1000000,\r\nlog = true // slider will ajust displayed value logarithmic scale\r\n)\r\n```\r\n\r\n## List option\r\n\r\n\r\n![list](https://i.imgur.com/otNfKdD.png)\r\n\r\n\r\n```ts\r\n// regular list\r\nquote = option(\r\n  type=list,\r\n  options=[null, "USD", "USDT", "TUSD", "USDC"],\r\n  rebuild=true // not specifc to list but will trigger a full indi rebuild when change\r\n)\r\n\r\n// custom list item labels\r\nquote = option(\r\n  type=list,\r\n  options={\r\n    "": "Pick something",\r\n    "USD": "United State Dollar",\r\n    "USDT": "Tether",\r\n    "USDC": "Coinbase USD",\r\n    "TUSD": "TrueUSD"\r\n  },\r\n  default=USD\r\n)\r\n\r\n// same as list but with predefined exchanges options\r\nexchange = option(type=exchange, rebuild=true)\r\n```\r\n\r\n> Warning\r\n> options must be valid JSON format all option values must be wrapped in double-quotes\r\n\r\n## Color input\r\n\r\n```ts\r\n// regular color with default value\r\ncolor = option(type=color,default="red")\r\n\r\n// other color format are allowed\r\ncolor = option(type=color,default="rgba(0, 255, 0, 0.5)")\r\n```\r\n\r\n> Warning  \r\n> missing a `,` in the color code, a `"` in the list options, WILL break the whole chart without notice.\r\n\r\n\r\n## Usage with source() function\r\n\r\n```ts\r\n// let user choose spot, perp or both in indicator\'s settings\r\ntype = option(type=list, options=[null, "spot", "perp"], rebuild=true)\r\n\r\n// get list of markets matching given type \r\nsrc = source(type=type)\r\n\r\n// aggregate ohlc from markets & print into candlestick serie\r\ncandlestick(avg_ohlc(src))\r\n```';export{n as default};
